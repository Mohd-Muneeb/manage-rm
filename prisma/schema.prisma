// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = "postgresql://postgres:testing@localhost:5432/crmm?schema=public"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                String        @id @default(cuid())
    name              String?
    email             String?       @unique
    emailVerified     DateTime?
    image             String?
    role              String?       @default("viewer")
    accounts          Account[]
    sessions          Session[]
    managersId        String?
    mobile            Int?
    countryCode       Int?
    isEmailSubscribed Boolean       @default(true)
    isSmsSubscribed   Boolean       @default(true)
    isPhoneSubscribed Boolean       @default(true)
    location          String        @default("500007")
    createdAt         DateTime      @default(now())
    updatedAt         DateTime      @updatedAt
    language          String        @default("en")
    emailRecieved     Int           @default(0)
    smsRecieved       Int           @default(0)
    phoneRecieved     Int           @default(0)
    Organisation      Organisation? @relation(fields: [organisationId], references: [id])
    organisationId    String?
    Customer          Customer[]

    @@index([name, email])
}

model Organisation {
    id        String     @id @default(cuid())
    name      String
    desc      String?
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    profile   String?
    domain    String?
    User      User[]
    Customer  Customer[]

    @@index([name])
}

model Customer {
    id             String       @id @default(cuid())
    firstName      String?
    lastName       String?
    email          String
    createdAt      DateTime
    updatedAt      DateTime
    organisation   Organisation @relation(fields: [organisationId], references: [id])
    organisationId String
    User           User         @relation(fields: [userId], references: [id])
    domain         String
    location       String[]     @default(["500007"])
    userId         String

    @@index([id, email])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
